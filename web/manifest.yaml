apiVersion: v1
kind: configMap
metadata:
  name: web
  namespace: roboshop
data:
  nginx.conf: |
    user www-data;
    worker_processes 4;
    pid /var/run/nginx.pid;

    events {
      worker_connections 768;
      # multi_accept on;
    }

    http {

      ##
      # Basic Settings
      ##

      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;
      large_client_header_buffers 6 32k;
      client_max_body_size 100m;

      # server_names_hash_bucket_size 64;
      # server_name_in_redirect off;
      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      ##
      # Logging Settings
      ##
      access_log /var/log/nginx/access.log;
      error_log /var/log/nginx/error.log debug; # change from debug to warn or error for production

      ##
      # Gzip Settings
      ##
      gzip on;
      gzip_disable "msie6";

      ##
      # Virtual Host Configs
      ##

      include /etc/nginx/conf.d/*.conf;
      include /etc/nginx/sites-enabled/*;

      server {
        listen       80;
        server_name  localhost;

        proxy_http_version 1.1;

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;
        #error_log /dev/stdout debug;
        #rewrite_log on;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            ssi    on;
        }

        location /images/ {
            expires 5s;
            root   /usr/share/nginx/html;
            try_files $uri /images/placeholder.png;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        location /api/catalogue/ {
          proxy_pass http://catalogue:8080/;
        }

        location /api/user/ {
          proxy_pass http://user:8080/;
        }

        location /api/cart/ {
          proxy_pass http://cart:8080/;
        }

        location /api/shipping/ {
          proxy_pass http://shipping:8080/;
        }

        location /api/payment/ {
          proxy_pass http://payment:8080/;
        }
      }
    } 


---

# Deployment for the Web Service

apiVersion: v1
kind: Deployment
metadata:
  name: web
  namespace: roboshop
  labels:
    app: app
    project: roboshop
    tier: web
spec:
  replicas: 1         # wen can Increase replicas for high availability
  selector:
    matchLabels:
      app: web
      project: roboshop
      tier: web
  template:
    metadata:
      labels:
        app: web
        project: roboshop
        tier: web
    spec:
      containers:
      - name: web
        image: darauday0/web:v1
        imagePullPolicy: Always
        volumeMounts:                               # Mount the ConfigMap as a volume within the container
          - name: nginx-conf                        # Reference the volume name defined below
            mountPath: /etc/nginx/nginx.conf        # Specify the file path in the container to mount
            subPath: nginx.conf                     # Specify the key in ConfigMap as a file (nginx.conf)
            readOnly: true                          # file is read-only within the container
        ports:
        - containerPort: 80              # Expose port 80 within the container for NGINX
      
      volumes:                                      # Define the volume for the ConfigMap
      - name: nginx-conf
        configMap:
          name: web                                  # Link this volume to the ConfigMap named 'web'
          items:
            - key: nginx.conf                       # define like key = value as key and filename from the ConfigMap
              path: nginx.conf
      

---
# Service of type LoadBalancer for Web Service

apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: roboshop
spec:
  type: LoadBalancer                # Expose the service to external traffic
  selector:
    app: web
    project: roboshop
    tier: web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80


      
    
