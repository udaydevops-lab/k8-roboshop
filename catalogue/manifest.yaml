# ConfigMap for catalogue configuration
apiVersion: v1
kind: configMap
metadata:
  name: catalogue
  namespace: roboshop
data:
  MONGO: "true"

---
# Deployment for catalogue application
apiVersion: v1
kind: Deployment
metadata:
  name: catalogue
  namespace: roboshop
  labels:                       # these labels are deployment labels
    app: catalogue
    project: roboshop
    tier: db
spec:
  replicas: 1
  selector:                     # this with select the pod with the given matchlables
    matchLabels:                # these labels are used to find the pods
      app: catalogue
      project: roboshop
      tier: db
  template:
    metadata:
      labels:                   # these labels are pod lables
        app: catalogue
        project: roboshop
        tier: app
    spec:
      containers:
        - name: catalogue
          image: darauday0/catalogue:v1
          imagePullPolicy: Always
          envFrom:
          - configMapRef:
              name: catalogue
          ports:
          - containerPort: 8080
          
          # resources:
          #   requests:
          #     memory: "128Mi"
          #     cpu: "250m"
          #   limits:
          #     memory: "256Mi"
          #     cpu: "500m"
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: 8080
          #   initialDelaySeconds: 30
          #   periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: 8080
          #   initialDelaySeconds: 5
          #   periodSeconds: 10

---
# Service to expose catalogue application
apiVersion: v1
kind: service
metadata:
  name: catalogue
  namespace: roboshop
spec:
  selector:
    app: catalogue
    project: roboshop
    tier: app
  ports:
    - protocol: TCP
      port: 8080 # service port
      targetPort: 8080 # container port
  type: ClusterIP     # it is default service

  